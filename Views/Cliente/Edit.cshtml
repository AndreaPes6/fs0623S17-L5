@model HotelSoloRicchi.Models.Cliente

@{
    ViewBag.Title = "Modifica Cliente";
}

<h2>Modifica Cliente</h2>

@using (Html.BeginForm("Edit", "Cliente", FormMethod.Post, new { novalidate = "true", id = "ClienteForm" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)

    <div class="mb-3">
        @Html.LabelFor(model => model.Nome, new { htmlAttributes = new { @class = "form-label" } })
        @Html.TextBoxFor(model => model.Nome, new { @class = $"form-control {(ViewData.ModelState.IsValidField("Nome") ? "" : "is-invalid")}" })
        @Html.ValidationMessageFor(model => model.Nome, null, new { htmlAttributes = new { @class = "invalid-feedback" } })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-label" } })
        @Html.TextBoxFor(model => model.Cognome, new { @class = $"form-control {(ViewData.ModelState.IsValidField("Cognome") ? "" : "is-invalid")}" })
        @Html.ValidationMessageFor(model => model.Cognome, null, new { htmlAttributes = new { @class = "invalid-feedback" } })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Email, new { htmlAttributes = new { @class = "form-label" } })
        @Html.TextBoxFor(model => model.Email, new { @class = $"form-control {(ViewData.ModelState.IsValidField("Email") ? "" : "is-invalid")}" })
        @Html.ValidationMessageFor(model => model.Email, null, new { htmlAttributes = new { @class = "invalid-feedback" } })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.CF, new { htmlAttributes = new { @class = "form-label" } })
        @Html.TextBoxFor(model => model.CF, new { @class = $"form-control {(ViewData.ModelState.IsValidField("CF") ? "" : "is-invalid")}" })
        @Html.ValidationMessageFor(model => model.CF, null, new { htmlAttributes = new { @class = "invalid-feedback" } })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Provincia, new { htmlAttributes = new { @class = "form-label" } })
        @Html.TextBoxFor(model => model.Provincia, new { @class = $"form-control {(ViewData.ModelState.IsValidField("Provincia") ? "" : "is-invalid")}" })
        @Html.ValidationMessageFor(model => model.Provincia, null, new { htmlAttributes = new { @class = "invalid-feedback" } })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Città, new { htmlAttributes = new { @class = "form-label" } })
        @Html.TextBoxFor(model => model.Città, new { @class = $"form-control {(ViewData.ModelState.IsValidField("Città") ? "" : "is-invalid")}" })
        @Html.ValidationMessageFor(model => model.Città, null, new { htmlAttributes = new { @class = "invalid-feedback" } })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.NumeroTelefono, new { htmlAttributes = new { @class = "form-label" } })
        @Html.TextBoxFor(model => model.NumeroTelefono, new { @class = $"form-control {(ViewData.ModelState.IsValidField("NumeroTelefono") ? "" : "is-invalid")}" })
        @Html.ValidationMessageFor(model => model.NumeroTelefono, null, new { htmlAttributes = new { @class = "invalid-feedback" } })
    </div>

    <button type="submit" class="btn btn-primary">Modifica</button>
}
